
name: Deploy

on:
  issue_comment:
    types: [created]

jobs:  
  parse:
    if: ${{ !github.event.issue.pull_request && github.event.comment.body == 'Approved' }}
    runs-on: ubuntu-latest
    outputs:
      deploy-environment: ${{ fromJSON(steps.issue_body_parser.outputs.payload).environment }}
      ci-run-number: ${{ fromJSON(steps.issue_body_parser.outputs.payload).runNumber }}
    steps:
      - name: Comment on Issue      
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: 'Deployment Initiated ðŸš€'
          
      - name: Get Issue Data
        uses: peter-murray/issue-body-parser-action@v1
        id: issue_body_parser
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_id: ${{ github.event.issue.number }}         
          payload_marker: target_payload 
  
  notify:
    needs: [parse]
    if: ${{ needs.parse.outputs.deploy-environment == 'Prod' || needs.parse.outputs.deploy-environment == 'alt-prod' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Notify
        run: echo Starting Deployment to ${{ needs.parse.outputs.deploy-environment }}...
        
  deploy:
    needs: [parse]
    if: ${{ needs.parse.outputs.deploy-environment == 'Prod' }}
    runs-on: ubuntu-latest    

    steps:
      - name: Deploy to PROD
        run: echo Simulating Deployment to PROD
        
  alt-deploy:
    needs: [parse]
    if: ${{ needs.parse.outputs.deploy-environment == 'alt-prod' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to ALT-PROD
        run: echo Simulating Deployment to ALT PROD
    
  close-issue:
    needs: [deploy, alt-deploy]
    if: ${{ always() }}
    runs-on: ubuntu-latest  
    
    steps:
      - name: Close Issue
        if: ${{ needs.alt-deploy.result == 'success' || needs.deploy.result == 'success' }}
        uses: peter-evans/close-issue@v1.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment: 'Deployment Completed ðŸŒŸ'
      
  end-notify:
    needs: [deploy, alt-deploy]
    if: ${{ always() && (needs.deploy.result == 'success' || needs.alt-deploy.result == 'success') }}
    name: Notify of Build Complete
    runs-on: ubuntu-latest
    
    steps:
      - name: Notify
        run: echo Deployed
